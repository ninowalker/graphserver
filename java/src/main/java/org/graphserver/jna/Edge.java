package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:44</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Edge extends Structure<Edge, Edge.ByValue, Edge.ByReference > {
	/// C type : Vertex*
	public org.graphserver.jna.Vertex.ByReference from;
	/// C type : Vertex*
	public org.graphserver.jna.Vertex.ByReference to;
	/// C type : EdgePayload*
	public org.graphserver.jna.EdgePayload.ByReference payload;
	public int enabled;
	public Edge() {
		super();
	}
	/**
	 * @param from C type : Vertex*<br>
	 * @param to C type : Vertex*<br>
	 * @param payload C type : EdgePayload*
	 */
	public Edge(org.graphserver.jna.Vertex.ByReference from, org.graphserver.jna.Vertex.ByReference to, org.graphserver.jna.EdgePayload.ByReference payload, int enabled) {
		super();
		this.from = from;
		this.to = to;
		this.payload = payload;
		this.enabled = enabled;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected Edge newInstance() { return new Edge(); }
	public static Edge[] newArray(int arrayLength) {
		return Structure.newArray(Edge.class, arrayLength);
	}
	public static class ByReference extends Edge implements Structure.ByReference {
		
	};
	public static class ByValue extends Edge implements Structure.ByValue {
		
	};
}
