package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>Graphserver</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface GraphserverLibrary extends Library {
	
	public static final java.lang.String JNA_LIBRARY_NAME = LibraryExtractor
			.getLibraryPath("graphserver", true,
					org.graphserver.jna.GraphserverLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary
			.getInstance(
					org.graphserver.jna.GraphserverLibrary.JNA_LIBRARY_NAME);
	public static final GraphserverLibrary INSTANCE = (GraphserverLibrary) Native
			.loadLibrary(
					org.graphserver.jna.GraphserverLibrary.JNA_LIBRARY_NAME,
					org.graphserver.jna.GraphserverLibrary.class);

	/**
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i><br>
	 * enum values
	 */
	public static interface edgepayload_t {
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:56</i>
		public static final int PL_STREET = 0;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:57</i>
		public static final int PL_TRIPHOPSCHED_DEPRIC = 1;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:58</i>
		public static final int PL_TRIPHOP_DEPRIC = 2;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:59</i>
		public static final int PL_LINK = 3;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:60</i>
		public static final int PL_EXTERNVALUE = 4;
		/**
		 * 5<br>
		 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:61</i>
		 */
		public static final int PL_NONE = 5;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:62</i>
		public static final int PL_WAIT = 6;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:63</i>
		public static final int PL_HEADWAY = 7;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:64</i>
		public static final int PL_TRIPBOARD = 8;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:65</i>
		public static final int PL_CROSSING = 9;
		/**
		 * 10<br>
		 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:66</i>
		 */
		public static final int PL_ALIGHT = 10;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:67</i>
		public static final int PL_HEADWAYBOARD = 11;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:68</i>
		public static final int PL_EGRESS = 12;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:69</i>
		public static final int PL_HEADWAYALIGHT = 13;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:70</i>
		public static final int PL_ELAPSE_TIME = 14;
		/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h:71</i>
		public static final int PL_COMBINATION = 15;
	};
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int SECS_IN_DAY = 86400;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int MAX_LONG = 2147483647;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/edgetypes/tripboard.h</i>
	public static final int NO_OVERAGE_VALUE = -1;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int FALSE = 0;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int ABSOLUTE_MAX_WALK = 1000000;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int TRUE = 1;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/graphserver.h</i>
	public static final int INFINITY = GraphserverLibrary.MAX_LONG;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h</i>
	public interface signal_callback extends Callback {
		void invoke(int int1);
	};
	/**
	 * Original signature : <code>CHPath* chpNew(int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:15</i>
	 */
	org.graphserver.jna.CHPath chpNew(int n, NativeLong length);
	/**
	 * Original signature : <code>int chpLength(CHPath*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:17</i>
	 */
	int chpLength(org.graphserver.jna.CHPath this_);
	/**
	 * Original signature : <code>CHPath* chpCombine(CHPath*, CHPath*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:19</i>
	 */
	org.graphserver.jna.CHPath chpCombine(org.graphserver.jna.CHPath a, org.graphserver.jna.CHPath b);
	/**
	 * Original signature : <code>void chpDestroy(CHPath*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:21</i>
	 */
	void chpDestroy(org.graphserver.jna.CHPath this_);
	/**
	 * Original signature : <code>CHPath* dist(Graph*, char*, char*, WalkOptions*, int, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:23</i><br>
	 * @deprecated use the safer methods {@link #dist(org.graphserver.jna.Graph, java.nio.ByteBuffer, java.nio.ByteBuffer, org.graphserver.jna.GraphserverLibrary.WalkOptions, int, int)} and {@link #dist(org.graphserver.jna.Graph, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.GraphserverLibrary.WalkOptions, int, int)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.CHPath dist(org.graphserver.jna.Graph gg, Pointer from_v_label, Pointer to_v_label, GraphserverLibrary.WalkOptions wo, int weightlimit, int return_full_path);
	/**
	 * Original signature : <code>CHPath* dist(Graph*, char*, char*, WalkOptions*, int, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:23</i>
	 */
	org.graphserver.jna.CHPath dist(org.graphserver.jna.Graph gg, ByteBuffer from_v_label, ByteBuffer to_v_label, GraphserverLibrary.WalkOptions wo, int weightlimit, int return_full_path);
	/**
	 * Original signature : <code>CHPath** get_shortcuts(Graph*, Vertex*, WalkOptions*, int, int*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:25</i><br>
	 * @deprecated use the safer methods {@link #get_shortcuts(org.graphserver.jna.Graph, org.graphserver.jna.Vertex, org.graphserver.jna.GraphserverLibrary.WalkOptions, int, java.nio.IntBuffer)} and {@link #get_shortcuts(org.graphserver.jna.Graph, org.graphserver.jna.Vertex, org.graphserver.jna.GraphserverLibrary.WalkOptions, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@java.lang.Deprecated 
	PointerByReference get_shortcuts(org.graphserver.jna.Graph gg, org.graphserver.jna.Vertex vv, GraphserverLibrary.WalkOptions wo, int search_limit, IntByReference n);
	/**
	 * Original signature : <code>CHPath** get_shortcuts(Graph*, Vertex*, WalkOptions*, int, int*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:25</i>
	 */
	PointerByReference get_shortcuts(org.graphserver.jna.Graph gg, org.graphserver.jna.Vertex vv, GraphserverLibrary.WalkOptions wo, int search_limit, IntBuffer n);
	/**
	 * Original signature : <code>Heap* init_priority_queue(Graph*, WalkOptions*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:27</i>
	 */
	GraphserverLibrary.Heap init_priority_queue(org.graphserver.jna.Graph gg, GraphserverLibrary.WalkOptions wo, int search_limit);
	/**
	 * Original signature : <code>void pqPush(Heap*, Vertex*, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:29</i>
	 */
	void pqPush(GraphserverLibrary.Heap pq, org.graphserver.jna.Vertex item, NativeLong priority);
	/**
	 * Original signature : <code>Vertex* pqPop(Heap*, long*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:31</i>
	 */
	org.graphserver.jna.Vertex pqPop(GraphserverLibrary.Heap pq, NativeLongByReference priority);
	/**
	 * Original signature : <code>CH* get_contraction_hierarchies(Graph*, WalkOptions*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:33</i>
	 */
	org.graphserver.jna.CH get_contraction_hierarchies(org.graphserver.jna.Graph gg, GraphserverLibrary.WalkOptions wo, int search_limit);
	/**
	 * Original signature : <code>CH* chNew()</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:35</i>
	 */
	org.graphserver.jna.CH chNew();
	/**
	 * Original signature : <code>Graph* chUpGraph(CH*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:37</i>
	 */
	org.graphserver.jna.Graph chUpGraph(org.graphserver.jna.CH this_);
	/**
	 * Original signature : <code>Graph* chDownGraph(CH*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:39</i>
	 */
	org.graphserver.jna.Graph chDownGraph(org.graphserver.jna.CH this_);
	/**
	 * Original signature : <code>EdgePayload* epNew(edgepayload_t, void*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:13</i><br>
	 * @param type @see edgepayload_t
	 */
	org.graphserver.jna.EdgePayload epNew(int type, Pointer payload);
	/**
	 * Original signature : <code>void epDestroy(EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:16</i>
	 */
	void epDestroy(org.graphserver.jna.EdgePayload this_);
	/**
	 * Original signature : <code>edgepayload_t epGetType(EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:19</i>
	 */
	/**
	 * @see edgepayload_t
	 */int epGetType(org.graphserver.jna.EdgePayload this_);
	/**
	 * Original signature : <code>epGetExternalId(EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:22</i>
	 */
	int epGetExternalId(org.graphserver.jna.EdgePayload this_);
	/**
	 * Original signature : <code>void epSetExternalId(EdgePayload*, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:25</i>
	 */
	void epSetExternalId(org.graphserver.jna.EdgePayload this_, NativeLong external_id);
	/**
	 * Original signature : <code>State* epWalk(EdgePayload*, State*, WalkOptions*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:28</i>
	 */
	GraphserverLibrary.State epWalk(org.graphserver.jna.EdgePayload this_, GraphserverLibrary.State param, GraphserverLibrary.WalkOptions options);
	/**
	 * Original signature : <code>State* epWalkBack(EdgePayload*, State*, WalkOptions*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:31</i>
	 */
	GraphserverLibrary.State epWalkBack(org.graphserver.jna.EdgePayload this_, GraphserverLibrary.State param, GraphserverLibrary.WalkOptions options);
	/**
	 * Original signature : <code>Graph* gNew()</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:53</i>
	 */
	org.graphserver.jna.Graph gNew();
	/**
	 * Original signature : <code>void gDestroyBasic(Graph*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:56</i>
	 */
	void gDestroyBasic(org.graphserver.jna.Graph this_, int free_edge_payloads);
	/**
	 * Original signature : <code>void gDestroy(Graph*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:59</i>
	 */
	void gDestroy(org.graphserver.jna.Graph this_);
	/**
	 * Original signature : <code>Vertex* gAddVertex(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:62</i><br>
	 * @deprecated use the safer methods {@link #gAddVertex(org.graphserver.jna.Graph, java.lang.String)} and {@link #gAddVertex(org.graphserver.jna.Graph, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.Vertex gAddVertex(org.graphserver.jna.Graph this_, Pointer label);
	/**
	 * Original signature : <code>Vertex* gAddVertex(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:62</i>
	 */
	org.graphserver.jna.Vertex gAddVertex(org.graphserver.jna.Graph this_, java.lang.String label);
	/**
	 * Original signature : <code>void gRemoveVertex(Graph*, const char*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:65</i><br>
	 * @deprecated use the safer methods {@link #gRemoveVertex(org.graphserver.jna.Graph, java.lang.String, int)} and {@link #gRemoveVertex(org.graphserver.jna.Graph, com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated 
	void gRemoveVertex(org.graphserver.jna.Graph this_, Pointer label, int free_edge_payloads);
	/**
	 * Original signature : <code>void gRemoveVertex(Graph*, const char*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:65</i>
	 */
	void gRemoveVertex(org.graphserver.jna.Graph this_, java.lang.String label, int free_edge_payloads);
	/**
	 * Original signature : <code>Vertex* gGetVertex(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:68</i><br>
	 * @deprecated use the safer methods {@link #gGetVertex(org.graphserver.jna.Graph, java.lang.String)} and {@link #gGetVertex(org.graphserver.jna.Graph, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.Vertex gGetVertex(org.graphserver.jna.Graph this_, Pointer label);
	/**
	 * Original signature : <code>Vertex* gGetVertex(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:68</i>
	 */
	org.graphserver.jna.Vertex gGetVertex(org.graphserver.jna.Graph this_, java.lang.String label);
	/**
	 * Original signature : <code>void gAddVertices(Graph*, const char**, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:71</i><br>
	 * @deprecated use the safer methods {@link #gAddVertices(org.graphserver.jna.Graph, java.lang.String[], int)} and {@link #gAddVertices(org.graphserver.jna.Graph, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@java.lang.Deprecated 
	void gAddVertices(org.graphserver.jna.Graph this_, PointerByReference labels, int n);
	/**
	 * Original signature : <code>void gAddVertices(Graph*, const char**, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:71</i>
	 */
	void gAddVertices(org.graphserver.jna.Graph this_, java.lang.String labels[], int n);
	/**
	 * Original signature : <code>Edge* gAddEdge(Graph*, const char*, const char*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:74</i><br>
	 * @deprecated use the safer methods {@link #gAddEdge(org.graphserver.jna.Graph, java.lang.String, java.lang.String, org.graphserver.jna.EdgePayload)} and {@link #gAddEdge(org.graphserver.jna.Graph, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.EdgePayload)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.Edge gAddEdge(org.graphserver.jna.Graph this_, Pointer from, Pointer to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>Edge* gAddEdge(Graph*, const char*, const char*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:74</i>
	 */
	org.graphserver.jna.Edge gAddEdge(org.graphserver.jna.Graph this_, java.lang.String from, java.lang.String to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>Vertex** gVertices(Graph*, long*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:77</i>
	 */
	PointerByReference gVertices(org.graphserver.jna.Graph this_, NativeLongByReference num_vertices);
	/**
	 * Original signature : <code>ShortestPathTree* gShortestPathTree(Graph*, const char*, const char*, State*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:80</i><br>
	 * @deprecated use the safer methods {@link #gShortestPathTree(org.graphserver.jna.Graph, java.lang.String, java.lang.String, org.graphserver.jna.GraphserverLibrary.State, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} and {@link #gShortestPathTree(org.graphserver.jna.Graph, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.GraphserverLibrary.State, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.ShortestPathTree gShortestPathTree(org.graphserver.jna.Graph this_, Pointer from, Pointer to, GraphserverLibrary.State init_state, GraphserverLibrary.WalkOptions options, NativeLong maxtime, int hoplimit, NativeLong weightlimit);
	/**
	 * Original signature : <code>ShortestPathTree* gShortestPathTree(Graph*, const char*, const char*, State*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:80</i>
	 */
	org.graphserver.jna.ShortestPathTree gShortestPathTree(org.graphserver.jna.Graph this_, java.lang.String from, java.lang.String to, GraphserverLibrary.State init_state, GraphserverLibrary.WalkOptions options, NativeLong maxtime, int hoplimit, NativeLong weightlimit);
	/**
	 * Original signature : <code>ShortestPathTree* gShortestPathTreeRetro(Graph*, const char*, const char*, State*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:83</i><br>
	 * @deprecated use the safer methods {@link #gShortestPathTreeRetro(org.graphserver.jna.Graph, java.lang.String, java.lang.String, org.graphserver.jna.GraphserverLibrary.State, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} and {@link #gShortestPathTreeRetro(org.graphserver.jna.Graph, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.GraphserverLibrary.State, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.ShortestPathTree gShortestPathTreeRetro(org.graphserver.jna.Graph this_, Pointer from, Pointer to, GraphserverLibrary.State init_state, GraphserverLibrary.WalkOptions options, NativeLong mintime, int hoplimit, NativeLong weightlimit);
	/**
	 * Original signature : <code>ShortestPathTree* gShortestPathTreeRetro(Graph*, const char*, const char*, State*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:83</i>
	 */
	org.graphserver.jna.ShortestPathTree gShortestPathTreeRetro(org.graphserver.jna.Graph this_, java.lang.String from, java.lang.String to, GraphserverLibrary.State init_state, GraphserverLibrary.WalkOptions options, NativeLong mintime, int hoplimit, NativeLong weightlimit);
	/**
	 * direction specifies forward or retro routing<br>
	 * Original signature : <code>State* gShortestPath(Graph*, const char*, const char*, State*, int, long*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:87</i><br>
	 * @deprecated use the safer methods {@link #gShortestPath(org.graphserver.jna.Graph, java.lang.String, java.lang.String, org.graphserver.jna.GraphserverLibrary.State, int, com.sun.jna.ptr.NativeLongByReference, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} and {@link #gShortestPath(org.graphserver.jna.Graph, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.GraphserverLibrary.State, int, com.sun.jna.ptr.NativeLongByReference, org.graphserver.jna.GraphserverLibrary.WalkOptions, com.sun.jna.NativeLong, int, com.sun.jna.NativeLong)} instead
	 */
	@java.lang.Deprecated 
	GraphserverLibrary.State gShortestPath(org.graphserver.jna.Graph this_, Pointer from, Pointer to, GraphserverLibrary.State init_state, int direction, NativeLongByReference size, GraphserverLibrary.WalkOptions options, NativeLong timelimit, int hoplimit, NativeLong weightlimit);
	/**
	 * direction specifies forward or retro routing<br>
	 * Original signature : <code>State* gShortestPath(Graph*, const char*, const char*, State*, int, long*, WalkOptions*, long, int, long)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:87</i>
	 */
	GraphserverLibrary.State gShortestPath(org.graphserver.jna.Graph this_, java.lang.String from, java.lang.String to, GraphserverLibrary.State init_state, int direction, NativeLongByReference size, GraphserverLibrary.WalkOptions options, NativeLong timelimit, int hoplimit, NativeLong weightlimit);
	/**
	 * Original signature : <code>gSize(Graph*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:90</i>
	 */
	int gSize(org.graphserver.jna.Graph this_);
	/**
	 * Original signature : <code>void gSetVertexEnabled(Graph*, const char*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:93</i><br>
	 * @deprecated use the safer methods {@link #gSetVertexEnabled(org.graphserver.jna.Graph, java.lang.String, int)} and {@link #gSetVertexEnabled(org.graphserver.jna.Graph, com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated 
	void gSetVertexEnabled(org.graphserver.jna.Graph this_, Pointer label, int enabled);
	/**
	 * Original signature : <code>void gSetVertexEnabled(Graph*, const char*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:93</i>
	 */
	void gSetVertexEnabled(org.graphserver.jna.Graph this_, java.lang.String label, int enabled);
	/**
	 * Original signature : <code>ShortestPathTree* sptNew()</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:98</i>
	 */
	org.graphserver.jna.ShortestPathTree sptNew();
	/**
	 * Original signature : <code>void sptDestroy(ShortestPathTree*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:101</i>
	 */
	void sptDestroy(org.graphserver.jna.ShortestPathTree this_);
	/**
	 * Original signature : <code>SPTVertex* sptAddVertex(ShortestPathTree*, Vertex*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:104</i>
	 */
	org.graphserver.jna.SPTVertex sptAddVertex(org.graphserver.jna.ShortestPathTree this_, org.graphserver.jna.Vertex mirror, int hop);
	/**
	 * Original signature : <code>void sptRemoveVertex(ShortestPathTree*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:107</i><br>
	 * @deprecated use the safer methods {@link #sptRemoveVertex(org.graphserver.jna.ShortestPathTree, java.lang.String)} and {@link #sptRemoveVertex(org.graphserver.jna.ShortestPathTree, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	void sptRemoveVertex(org.graphserver.jna.ShortestPathTree this_, Pointer label);
	/**
	 * Original signature : <code>void sptRemoveVertex(ShortestPathTree*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:107</i>
	 */
	void sptRemoveVertex(org.graphserver.jna.ShortestPathTree this_, java.lang.String label);
	/**
	 * Original signature : <code>SPTVertex* sptGetVertex(ShortestPathTree*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:110</i><br>
	 * @deprecated use the safer methods {@link #sptGetVertex(org.graphserver.jna.ShortestPathTree, java.lang.String)} and {@link #sptGetVertex(org.graphserver.jna.ShortestPathTree, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.SPTVertex sptGetVertex(org.graphserver.jna.ShortestPathTree this_, Pointer label);
	/**
	 * Original signature : <code>SPTVertex* sptGetVertex(ShortestPathTree*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:110</i>
	 */
	org.graphserver.jna.SPTVertex sptGetVertex(org.graphserver.jna.ShortestPathTree this_, java.lang.String label);
	/**
	 * Original signature : <code>Edge* sptAddEdge(ShortestPathTree*, const char*, const char*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:113</i><br>
	 * @deprecated use the safer methods {@link #sptAddEdge(org.graphserver.jna.ShortestPathTree, java.lang.String, java.lang.String, org.graphserver.jna.EdgePayload)} and {@link #sptAddEdge(org.graphserver.jna.ShortestPathTree, com.sun.jna.Pointer, com.sun.jna.Pointer, org.graphserver.jna.EdgePayload)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.Edge sptAddEdge(org.graphserver.jna.ShortestPathTree this_, Pointer from, Pointer to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>Edge* sptAddEdge(ShortestPathTree*, const char*, const char*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:113</i>
	 */
	org.graphserver.jna.Edge sptAddEdge(org.graphserver.jna.ShortestPathTree this_, java.lang.String from, java.lang.String to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>SPTVertex** sptVertices(ShortestPathTree*, long*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:116</i>
	 */
	PointerByReference sptVertices(org.graphserver.jna.ShortestPathTree this_, NativeLongByReference num_vertices);
	/**
	 * Original signature : <code>sptSize(ShortestPathTree*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:119</i>
	 */
	int sptSize(org.graphserver.jna.ShortestPathTree this_);
	/**
	 * Original signature : <code>Path* sptPathRetro(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:122</i><br>
	 * @deprecated use the safer methods {@link #sptPathRetro(org.graphserver.jna.Graph, java.lang.String)} and {@link #sptPathRetro(org.graphserver.jna.Graph, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	GraphserverLibrary.Path sptPathRetro(org.graphserver.jna.Graph g, Pointer origin_label);
	/**
	 * Original signature : <code>Path* sptPathRetro(Graph*, const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:122</i>
	 */
	GraphserverLibrary.Path sptPathRetro(org.graphserver.jna.Graph g, java.lang.String origin_label);
	/**
	 * Original signature : <code>Vertex* vNew(const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:127</i><br>
	 * @deprecated use the safer methods {@link #vNew(java.lang.String)} and {@link #vNew(com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated 
	org.graphserver.jna.Vertex vNew(Pointer label);
	/**
	 * Original signature : <code>Vertex* vNew(const char*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:127</i>
	 */
	org.graphserver.jna.Vertex vNew(java.lang.String label);
	/**
	 * Original signature : <code>void vDestroy(Vertex*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:130</i>
	 */
	void vDestroy(org.graphserver.jna.Vertex this_, int free_edge_payloads);
	/**
	 * Original signature : <code>Edge* vLink(Vertex*, Vertex*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:137</i>
	 */
	org.graphserver.jna.Edge vLink(org.graphserver.jna.Vertex this_, org.graphserver.jna.Vertex to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>Edge* vSetParent(Vertex*, Vertex*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:140</i>
	 */
	org.graphserver.jna.Edge vSetParent(org.graphserver.jna.Vertex this_, org.graphserver.jna.Vertex parent, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>void vRemoveOutEdgeRef(Vertex*, Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:149</i>
	 */
	void vRemoveOutEdgeRef(org.graphserver.jna.Vertex this_, org.graphserver.jna.Edge todie);
	/**
	 * Original signature : <code>void vRemoveInEdgeRef(Vertex*, Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:152</i>
	 */
	void vRemoveInEdgeRef(org.graphserver.jna.Vertex this_, org.graphserver.jna.Edge todie);
	/**
	 * Original signature : <code>char* vGetLabel(Vertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:155</i>
	 */
	java.lang.String vGetLabel(org.graphserver.jna.Vertex this_);
	/**
	 * Original signature : <code>int vDegreeOut(Vertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:158</i>
	 */
	int vDegreeOut(org.graphserver.jna.Vertex this_);
	/**
	 * Original signature : <code>int vDegreeIn(Vertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:161</i>
	 */
	int vDegreeIn(org.graphserver.jna.Vertex this_);
	/**
	 * Original signature : <code>SPTVertex* sptvNew(Vertex*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:166</i>
	 */
	org.graphserver.jna.SPTVertex sptvNew(org.graphserver.jna.Vertex mirror, int hop);
	/**
	 * Original signature : <code>void sptvDestroy(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:169</i>
	 */
	void sptvDestroy(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>Edge* sptvLink(SPTVertex*, SPTVertex*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:172</i>
	 */
	org.graphserver.jna.Edge sptvLink(org.graphserver.jna.SPTVertex this_, org.graphserver.jna.SPTVertex to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>Edge* sptvSetParent(SPTVertex*, SPTVertex*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:175</i>
	 */
	org.graphserver.jna.Edge sptvSetParent(org.graphserver.jna.SPTVertex this_, org.graphserver.jna.SPTVertex parent, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>void sptvRemoveOutEdgeRef(SPTVertex*, Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:184</i>
	 */
	void sptvRemoveOutEdgeRef(org.graphserver.jna.SPTVertex this_, org.graphserver.jna.Edge todie);
	/**
	 * Original signature : <code>void sptvRemoveInEdgeRef(SPTVertex*, Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:187</i>
	 */
	void sptvRemoveInEdgeRef(org.graphserver.jna.SPTVertex this_, org.graphserver.jna.Edge todie);
	/**
	 * Original signature : <code>char* sptvGetLabel(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:190</i>
	 */
	java.lang.String sptvGetLabel(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>int sptvDegreeOut(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:193</i>
	 */
	int sptvDegreeOut(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>int sptvDegreeIn(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:196</i>
	 */
	int sptvDegreeIn(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>State* sptvState(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:199</i>
	 */
	GraphserverLibrary.State sptvState(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>int sptvHop(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:202</i>
	 */
	int sptvHop(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>Edge* sptvGetParent(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:205</i>
	 */
	org.graphserver.jna.Edge sptvGetParent(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>Vertex* sptvMirror(SPTVertex*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:208</i>
	 */
	org.graphserver.jna.Vertex sptvMirror(org.graphserver.jna.SPTVertex this_);
	/**
	 * Original signature : <code>Edge* eNew(Vertex*, Vertex*, EdgePayload*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:213</i>
	 */
	org.graphserver.jna.Edge eNew(org.graphserver.jna.Vertex from, org.graphserver.jna.Vertex to, org.graphserver.jna.EdgePayload payload);
	/**
	 * Original signature : <code>void eDestroy(Edge*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:216</i>
	 */
	void eDestroy(org.graphserver.jna.Edge this_, int destroy_payload);
	/**
	 * Original signature : <code>State* eWalk(Edge*, State*, WalkOptions*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:223</i>
	 */
	GraphserverLibrary.State eWalk(org.graphserver.jna.Edge this_, GraphserverLibrary.State state, GraphserverLibrary.WalkOptions options);
	/**
	 * Original signature : <code>State* eWalkBack(Edge*, State*, WalkOptions*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:226</i>
	 */
	GraphserverLibrary.State eWalkBack(org.graphserver.jna.Edge this_, GraphserverLibrary.State state, GraphserverLibrary.WalkOptions options);
	/**
	 * Original signature : <code>Vertex* eGetFrom(Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:229</i>
	 */
	org.graphserver.jna.Vertex eGetFrom(org.graphserver.jna.Edge this_);
	/**
	 * Original signature : <code>Vertex* eGetTo(Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:232</i>
	 */
	org.graphserver.jna.Vertex eGetTo(org.graphserver.jna.Edge this_);
	/**
	 * Original signature : <code>EdgePayload* eGetPayload(Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:235</i>
	 */
	org.graphserver.jna.EdgePayload eGetPayload(org.graphserver.jna.Edge this_);
	/**
	 * Original signature : <code>int eGetEnabled(Edge*)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:238</i>
	 */
	int eGetEnabled(org.graphserver.jna.Edge this_);
	/**
	 * Original signature : <code>void eSetEnabled(Edge*, int)</code><br>
	 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:241</i>
	 */
	void eSetEnabled(org.graphserver.jna.Edge this_, int enabled);
	/// Pointer to unknown (opaque) type
	public static class State extends PointerType {
		public State(Pointer address) {
			super(address);
		}
		public State() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class Heap extends PointerType {
		public Heap(Pointer address) {
			super(address);
		}
		public Heap() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class ListNode extends PointerType {
		public ListNode(Pointer address) {
			super(address);
		}
		public ListNode() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class hashtable extends PointerType {
		public hashtable(Pointer address) {
			super(address);
		}
		public hashtable() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class Path extends PointerType {
		public Path(Pointer address) {
			super(address);
		}
		public Path() {
			super();
		}
	};
	/// Pointer to unknown (opaque) type
	public static class WalkOptions extends PointerType {
		public WalkOptions(Pointer address) {
			super(address);
		}
		public WalkOptions() {
			super();
		}
	};
}
