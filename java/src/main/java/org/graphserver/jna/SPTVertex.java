package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import org.graphserver.jna.GraphserverLibrary.ListNode;
import org.graphserver.jna.GraphserverLibrary.State;
/**
 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:33</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SPTVertex extends Structure<SPTVertex, SPTVertex.ByValue, SPTVertex.ByReference > {
	public int degree_out;
	public int degree_in;
	/// C type : ListNode*
	public ListNode outgoing;
	/// C type : ListNode*
	public ListNode incoming;
	/// C type : char*
	public Pointer label;
	/// C type : State*
	public State state;
	public int hop;
	/// C type : Vertex*
	public org.graphserver.jna.Vertex.ByReference mirror;
	public SPTVertex() {
		super();
	}
	/**
	 * @param outgoing C type : ListNode*<br>
	 * @param incoming C type : ListNode*<br>
	 * @param label C type : char*<br>
	 * @param state C type : State*<br>
	 * @param mirror C type : Vertex*
	 */
	public SPTVertex(int degree_out, int degree_in, ListNode outgoing, ListNode incoming, Pointer label, State state, int hop, org.graphserver.jna.Vertex.ByReference mirror) {
		super();
		this.degree_out = degree_out;
		this.degree_in = degree_in;
		this.outgoing = outgoing;
		this.incoming = incoming;
		this.label = label;
		this.state = state;
		this.hop = hop;
		this.mirror = mirror;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected SPTVertex newInstance() { return new SPTVertex(); }
	public static SPTVertex[] newArray(int arrayLength) {
		return Structure.newArray(SPTVertex.class, arrayLength);
	}
	public static class ByReference extends SPTVertex implements Structure.ByReference {
		
	};
	public static class ByValue extends SPTVertex implements Structure.ByValue {
		
	};
}
