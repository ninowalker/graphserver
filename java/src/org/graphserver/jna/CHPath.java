package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.NativeLong;
import com.sun.jna.ptr.PointerByReference;
/**
 * <i>native declaration : /Users/kolohe/dev/graphserver/core/contraction.h:2</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CHPath extends Structure<CHPath, CHPath.ByValue, CHPath.ByReference > {
	public int n;
	/// C type : EdgePayload**
	public PointerByReference payloads;
	public NativeLong length;
	/// C type : Vertex*
	public org.graphserver.jna.Vertex.ByReference fromv;
	/// C type : Vertex*
	public org.graphserver.jna.Vertex.ByReference tov;
	public CHPath() {
		super();
	}
	/**
	 * @param payloads C type : EdgePayload**<br>
	 * @param fromv C type : Vertex*<br>
	 * @param tov C type : Vertex*
	 */
	public CHPath(int n, PointerByReference payloads, NativeLong length, org.graphserver.jna.Vertex.ByReference fromv, org.graphserver.jna.Vertex.ByReference tov) {
		super();
		this.n = n;
		this.payloads = payloads;
		this.length = length;
		this.fromv = fromv;
		this.tov = tov;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected CHPath newInstance() { return new CHPath(); }
	public static CHPath[] newArray(int arrayLength) {
		return Structure.newArray(CHPath.class, arrayLength);
	}
	public static class ByReference extends CHPath implements Structure.ByReference {
		
	};
	public static class ByValue extends CHPath implements Structure.ByValue {
		
	};
}
