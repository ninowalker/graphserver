package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.Structure;
import org.graphserver.jna.GraphserverLibrary.hashtable;
/**
 * <i>native declaration : /Users/kolohe/dev/graphserver/core/graph.h:4</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Graph extends Structure<Graph, Graph.ByValue, Graph.ByReference > {
	/// C type : hashtable*
	public hashtable vertices;
	public Graph() {
		super();
	}
	/// @param vertices C type : hashtable*
	public Graph(hashtable vertices) {
		super();
		this.vertices = vertices;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected Graph newInstance() { return new Graph(); }
	public static Graph[] newArray(int arrayLength) {
		return Structure.newArray(Graph.class, arrayLength);
	}
	public static class ByReference extends Graph implements Structure.ByReference {
		
	};
	public static class ByValue extends Graph implements Structure.ByValue {
		
	};
}
