package org.graphserver.jna;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Callback;
import com.sun.jna.NativeLong;
import org.graphserver.jna.GraphserverLibrary.State;
import org.graphserver.jna.GraphserverLibrary.WalkOptions;
/**
 * <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:6</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EdgePayload extends Structure<EdgePayload, EdgePayload.ByValue, EdgePayload.ByReference > {
	/**
	 * @see edgepayload_t<br>
	 * C type : edgepayload_t
	 */
	public int type;
	public NativeLong external_id;
	/// C type : walk_callback
	public EdgePayload.walk_callback walk;
	/// C type : walkBack_callback
	public EdgePayload.walkBack_callback walkBack;
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:9</i>
	public interface walk_callback extends Callback {
		State invoke(EdgePayload EdgePayloadPtr1, State StatePtr1, WalkOptions WalkOptionsPtr1);
	};
	/// <i>native declaration : /Users/kolohe/dev/graphserver/core/edgepayload.h:10</i>
	public interface walkBack_callback extends Callback {
		State invoke(EdgePayload EdgePayloadPtr1, State StatePtr1, WalkOptions WalkOptionsPtr1);
	};
	public EdgePayload() {
		super();
	}
	/**
	 * @param type @see edgepayload_t<br>
	 * C type : edgepayload_t<br>
	 * @param walk C type : walk_callback<br>
	 * @param walkBack C type : walkBack_callback
	 */
	public EdgePayload(int type, NativeLong external_id, EdgePayload.walk_callback walk, EdgePayload.walkBack_callback walkBack) {
		super();
		this.type = type;
		this.external_id = external_id;
		this.walk = walk;
		this.walkBack = walkBack;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected EdgePayload newInstance() { return new EdgePayload(); }
	public static EdgePayload[] newArray(int arrayLength) {
		return Structure.newArray(EdgePayload.class, arrayLength);
	}
	public static class ByReference extends EdgePayload implements Structure.ByReference {
		
	};
	public static class ByValue extends EdgePayload implements Structure.ByValue {
		
	};
}
